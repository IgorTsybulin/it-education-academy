/**
 * Created by igortsybulin on 24.09.16.
 */

/*
 Задача 1.

 Написать функцию getNumbers(arr), которая принимает в качестве аргумента массив и возвращает массив состоящий только из чисел передаваемого массива.


 Тесты:

 console.log(getNumbers([1, 'a', 2, 'b'])); // [1, 2]
 console.log(getNumbers(['ready', 'get', 'set', 10, 'go', 112])); // [10, 112]
 console.log(getNumbers(['a', '2', 'b', 3, 'c', '4'])); // [3]

 */
/*

function getNumbers(arr) {
    var arr2 = [];
    var arrLength = arr.length;
    for (var i = 0; i < arrLength; i++) {
        if (typeof (arr[i]) !== "string") {
            arr2.push(arr[i]);
        }
    }
    return arr2;
}

console.log(getNumbers([1, 'a', 2, 'b'])); // [1, 2]
console.log(getNumbers(['ready', 'get', 'set', 10, 'go', 112])); // [10, 112]
console.log(getNumbers(['a', '2', 'b', 3, 'c', '4'])); // [3]
*/

/*
 Задача 2.

 Написать программу «Гадалка» которая в цикле выдает сообщение (с кнопками «Отмена» и «ОК»):
 «Задайте вопрос на который предполагается ответ „Да“ или „Нет“ и нажмите „OK“!»

 Если пользователь нажал «ОК» то случайным образом вывести строку из следующего массива:

 ["Бесспорно", "Это предрешено","Никаких сомнений","Определенно да","Можешь быть уверен в этом",
 "Мне кажется — да","Вероятнее всего","Хорошие перспективы","Да","Знаки говорят — да",
 "Пока не ясно, попробуй еще раз","Спроси позже","Лучше не рассказывать тебе это сейчас","Сейчас нельзя предсказать",
 "Сконцентрируйся и спроси снова","Даже не думай","Мой ответ — нет","Знаки говорят — нет",
 "Перспективы не очень хорошие","Весьма сомнительно","Нет"]

 Если пользователь нажал «Отмена», то закончить выполнение программы.
 */


function fortuneTeller() {
    var answers =  ["Бесспорно", "Это предрешено","Никаких сомнений","Определенно да","Можешь быть уверен в этом",
        "Мне кажется — да","Вероятнее всего","Хорошие перспективы","Да","Знаки говорят — да",
        "Пока не ясно, попробуй еще раз","Спроси позже","Лучше не рассказывать тебе это сейчас",
        "Сейчас нельзя предсказать", "Сконцентрируйся и спроси снова","Даже не думай","Мой ответ — нет",
        "Знаки говорят — нет", "Перспективы не очень хорошие","Весьма сомнительно","Нет"],
        min = 0,
        max = answers.length;

    var question = confirm('Задайте вопрос на который предполагается ответ „Да“ или „Нет“ и нажмите „OK“!');
    var randVal = min + Math.floor(Math.random()*(max + 1 - min));
    if (question) {
        return alert(answers[randVal]);
    } else {
        return alert("Good Buy!");
    }
}

fortuneTeller();


/*
 Задача 3.

 Cоздать функцию toBytes(size, unit), которая принимает на входе размер (size) и единицы (unit) (например 120 и Кб соответственно), и возвращает количество байт.
 Значение unit могут быть: Кб, Мб или Гб (кило-, мега- и гигабайты)
 1 Кб равен 1024 байта
 1 Мб равен 1024 Кб
 1 Гб равен 1024 Мб

 */


function toBytes(size, unit) {

    var res = "";

    if (unit === 'Kb') {
        res = (size*1024) + " bytes";
    } else if (unit === 'Mb') {
        res = (size*(1024*1024)) + " bytes";
    } else if (unit === 'Gb') {
        res = (size*(1024*1024*1024)) + " bytes";
    } else {
        return "It is not a proper unit of digital information!";
    }
    return res;
}

console.log(toBytes(100, 'Kb'));

console.log(toBytes(100, 'Mb'));

console.log(toBytes(100, 'Gb'));

console.log(toBytes(100, 'Tb'));



/*
 Задача 4.

 Написать функцию шифрования cipher(message, key, decipher), которая принимает следующие аргументы:
 message — (строка) сообщение для шифровки/разшифровки
 key — (число 1..33) ключ шифрования (сдвиг алфавита)
 decipher — (boolean) если true то производим расшифровку

 Функция должна реализовывать алгоритм шифрования «Шифр Цезаря»
 [https://uk.wikipedia.org/wiki/%D0%A8%D0%B8%D1%84%D1%80_%D0%A6%D0%B5%D0%B7%D0%B0%D1%80%D1%8F]
 простой подменой букв из одного алфавита буквами другого (со здвигом). Заданный алфавит:

 абвгдеёжзийклмнопрстуфхцчшщьыъэюя .

 Необходимо предусмотреть обработку вводимых параметров:
 сообщение приводить к нижнему регистру
 ключ выходящий за заданный диапазон 1..33 должен быть приведен к нему (если ключ < 1 то делать ключ = 1,
 если больше 33 то — 33)
 decipher должен иметь по умолчанию значение false (если пользователем не введено значение)

 Пример работы алгоритма:

 Шифровка:

 cipher('сообщение', 5); // цууёюйтнй

 ▽
 «абвгдеёжзийклмнопрстуфхцчшщьыъэюя .» алфавит
 «еёжзийклмнопрстуфхцчшщьыъэюя .абвгд» алфавит сдвинутый на 5
 ║           △²³                         ║
 ╔══════════════════╝           ╚═══════════════════════════╝
 сообщение
 ║
 ▽
 цууёюйтнй

 Дешифровка
 cipher('цууёюйтнй', 5, true); // сообщение

 ╔═══════════════════════════╗
 ▽           ▽²³                         ║
 «еёжзийклмнопрстуфхцчшщьыъэюя .абвгд» алфавит сдвинутый на 5
 «абвгдеёжзийклмнопрстуфхцчшщьыъэюя .» алфавит
 ║
 ╔══════════════════╝
 цууёюйтнй
 ║
 ▽
 сообщение


 Тесты:

 // Шифровка

 console.log(cipher('Тута ошибка', 55)); // «рср юмцж.и »
 console.log(cipher('Сообщение', 10)); // ышшкбочто
 console.log(cipher('Еще проверочка', -1)); // ёьё.рспгёспшлб

 // Дешифровка

 console.log(cipher('рср юмцж.и ', 55, true)); // тута ошибка
 console.log(cipher('ышшкбочто', 10, true)); // сообщение
 console.log(cipher('ёьё.рспгёспшлб', -1, true)); // еще проверочка

 console.log(cipher('мецеие', 5, true)); // засада
 console.log(cipher('ъэъзншхрчшзкгъвзнхтччшозышшкбочтоизщьшлоьвъозщш.ъэзщшрйхэуыъйи', 10, true)); // тут должно быть длинное сообщение. проверьте почту пожалуйста.
 console.log(cipher('эхщхбюьучогв.бьбвубхувё.юкбвф', 22, true)); // задание выполнено на отлично.


 */

function cipher(message, key, decipher) {

    var message = message.toLowerCase(),
        key,
        decipher,
        alphabet = "абвгдеёжзийклмнопрстуфхцчшщьыъэюя .",
        alphabetCoded,
        res = "";

    if (key < 1) {
        key = 1;
    } else if (key > 33) {
        key = 33;
    }

    for (i = 0; i < message.length; i++) {
        alphabetCoded = alphabet.slice(key, alphabet.length) + alphabet.slice(0, key);
        if (decipher == undefined) {
            letterNumber = alphabet.indexOf(message.charAt(i));
            letterCoded = alphabetCoded.charAt(letterNumber);
            res = res + letterCoded;
        } else  {
            letterNumberDeCoded = alphabetCoded.indexOf(message.charAt(i));
            letterDeCoded = alphabet.charAt(letterNumberDeCoded);
            res = res + letterDeCoded;
        }
    }
    return res;
}

// Шифровка

console.log(cipher('Тута ошибка', 55)); // «рср юмцж.и »
console.log(cipher('Сообщение', 10)); // ышшкбочто
console.log(cipher('Еще проверочка', -1)); // ёьё.рспгёспшлб

// Дешифровка

console.log(cipher('рср юмцж.и ', 55, true)); // тута ошибка
console.log(cipher('ышшкбочто', 10, true)); // сообщение
console.log(cipher('ёьё.рспгёспшлб', -1, true)); // еще проверочка

console.log(cipher('мецеие', 5, true)); // засада
console.log(cipher('ъэъзншхрчшзкгъвзнхтччшозышшкбочтоизщьшлоьвъозщш.ъэзщшрйхэуыъйи', 10, true)); // тут должно быть длинное сообщение. проверьте почту пожалуйста.
console.log(cipher('эхщхбюьучогв.бьбвубхувё.юкбвф', 22, true)); // задание выполнено на отлично.

